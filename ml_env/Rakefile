require_relative "config/config"

RUN_ID = CONFIG.fetch "training_name"

desc "Configure the ML env inside nvidia-docker"
task :configure do
  sh "ruby lib/ml_env_configure.rb"
end

desc "ssh into the machine"
task :ssh do
  sh "ssh #{USER}@#{vm_ip}"
end

desc "Download data to local machine"
task :download do
  sh "scp -r #{USER}@#{VM_IP}:/home/#{USER}/data/output ../data/output/"
end

desc "Download data to local machine - fakes images only"
task :download_fakes do
  sh "scp -r #{USER}@#{VM_IP}:/home/#{USER}/data/output/**/*.png ../data/output/"
end

desc "Download data to local machine - latest model only"
task :download_model do
  dir_run = "/home/#{USER}/data/output/#{RUN_ID}"
  model_file = `ssh #{USER}@#{VM_IP} ls -t #{dir_run}/*.pkl | head -1`
  model_file.strip!
  puts "executing: #{model_file}"
  sh "scp -r #{USER}@#{VM_IP}:#{model_file} ../data/output/"
end


desc "Download data to local machine - latest fake only"
task :download_fake do
  dir_run = "/home/#{USER}/data/output/#{RUN_ID}"
  model_file = `ssh #{USER}@#{VM_IP} ls -t #{dir_run}/*.png | head -1`
  model_file.strip!
  puts "executing: #{model_file}"
  sh "scp -r #{USER}@#{VM_IP}:#{model_file} ../data/output/"
end

desc "Download data to local machine - fakes images only"
task :download_run_fakes do
  sh "scp -r #{USER}@#{VM_IP}:/home/#{USER}/data/output/#{RUN_ID}r /*.png ../data/output/"
end

desc "Nvidia Stats"
task :stats do
  sh "ssh #{USER}@#{VM_IP} 'nvidia-smi && sudo free -h'"
end

desc "Logs"
task :logs do
  sh "ssh #{USER}@#{VM_IP} sudo docker logs -f $(ssh #{USER}@#{VM_IP} sudo docker ps | grep stylegan2 | cut -d \" \" -f1) 2>&1"
end

desc "List - Look at the data directory content"
task :list do
  dir_out = "/home/#{USER}/data/output"
  sh "ssh #{USER}@#{VM_IP} ls #{dir_out}"
end

desc "Reset Env - reset environment"
task :reset_env do
  puts "Are you sure you want to reset the env? (press Ctrl-C to stop or wait 10 seconds for it to be reset)"
  sleep 10
  # TODO:
  # ssh "ssh #{USER}@#{VM_IP} 'kill -9 ${ps aux | grep chef-client | grep chef-workstation/embedded/bin/ruby | awk -F \' \' \'{ print $2 }\'}'"
  sh "ssh #{USER}@#{VM_IP} 'sudo docker kill $(sudo docker ps | grep stylegan2 | cut -d \" \" -f1)'"
  sh "ssh #{USER}@#{VM_IP} 'cd ./data && sudo rm -rf images_* output'"
end

desc "Delete data"
task :delete_data do
  puts "Are you sure you want to delete data? (press Ctrl-C to stop or wait 10 seconds to delete the data - use reset env to stop stylegan2)"
  sleep 10
  sh "ssh #{USER}@#{VM_IP} 'cd ./data && sudo rm -rf images_* output'"
end


task dl:  :download
task log: :logs
task ls:  :list

task default: :configure
